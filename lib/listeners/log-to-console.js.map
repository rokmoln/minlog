{"version":3,"sources":["../../src/listeners/log-to-console.js"],"names":[],"mappings":"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","file":"log-to-console.js","sourcesContent":["import _ from 'lodash-firecloud';\nimport moment from 'moment';\n\nlet _levelToConsoleFun = function({level, levels}) {\n  if (_.isString(level)) {\n    // eslint-disable-next-line prefer-destructuring\n    level = levels[level];\n  }\n\n  if (_.inRange(level, 0, levels.warn)) {\n    return 'error';\n  } else if (_.inRange(level, levels.warn, levels.info)) {\n    return 'warn';\n  } else if (_.inRange(level, levels.info, levels.debug)) {\n    return 'info';\n  } else if (_.inRange(level, levels.debug, levels.trace)) {\n    // return 'debug';\n    // console.debug doesn't seem to print anything,\n    // but console.debug is an alias to console.log anyway\n    return 'log';\n  } else if (level === levels.trace) {\n    return 'trace';\n  }\n\n  return 'log';\n};\n\n/*\ncfg has 2 properties\n- level (optional, defaults to trace)\n  Any log entry less important that cfg.level is ignore.\n- iframeId (optional, default to 'top' or '?'\n  An identifier for the current \"window\".\n*/\n\nexport let logToConsole = function(cfg = {}) {\n  return async function({entry, logger, rawEntry}) {\n    if (_.filter(rawEntry._args).length === 1 && rawEntry._args[0]._babelSrc) {\n      return;\n    }\n\n    let maxLevelName = cfg.level || 'trace';\n    let maxLevel = logger.levels[maxLevelName];\n    maxLevel = _.floor(maxLevel / 10) * 10 + 10 - 1; // round up to next level, not inclusive\n    if (entry.level > maxLevel) {\n      return;\n    }\n\n    let now = moment(entry._time.stamp).utcOffset(entry._time.utc_offset).toISOString();\n    let levelName = logger.levelToLevelName(entry._level);\n    let formattedLevelName = _.padStart(_.toUpper(levelName), '5');\n    let consoleFun = _levelToConsoleFun({\n      level: entry._level,\n      levels: logger.levels\n    });\n\n    let color = '';\n    switch (consoleFun) {\n    case 'log':\n    case 'info':\n    case 'trace':\n      color = 'color: dodgerblue';\n      break;\n    default:\n    }\n\n    let prefixFormat = '%c%s %c%s%c';\n    let prefixArgs = [\n      color,\n      now,\n      'font-weight: bold',\n      formattedLevelName,\n      color\n    ];\n\n    let src = '';\n    if (entry._babelSrc) {\n      src = _.merge({}, entry._src, entry._babelSrc);\n      src = ` @webpack:///./${src.file}:${src.line}:${src.column}${src.function ? ` in ${src.function}()` : ''}`;\n    } else if (entry._src) {\n      src = entry._src;\n      src = ` ${src.file}:${src.line}:${src.column}${src.function ? ` in ${src.function}()` : ''}`;\n    }\n\n    let iframeId = _.defaultTo(\n      cfg.iframeId,\n      window.parent === window ? 'top' : '?'\n    );\n\n    let context = {\n      window,\n      documentElement: window.document.documentElement\n    };\n\n    let srcFormat = '%s in the %s context';\n    let srcArgs = [\n      src,\n      iframeId\n    ];\n\n    let msgFormat = '';\n    let msgArgs = [];\n    if (entry.msg) {\n      msgFormat = '\\n%s';\n      msgArgs = [\n        entry.msg\n      ];\n    }\n\n    let extraFormat = '';\n    let extraArgs = [];\n\n    let extra = _.omit(rawEntry, [\n      '_args',\n      '_babelSrc',\n      '_level',\n      '_src',\n      '_time',\n      'iframeId',\n      'msg'\n    ]);\n    _.merge(extra, context);\n\n    // devTools console sorts keys when object is expanded\n    extra = _.toPairs(extra);\n    extra = _.sortBy(extra, 0);\n    extra = _.fromPairs(extra);\n\n    // devTools collapses objects with 'too many' keys,\n    // so we output objects with only one key\n    _.forEach(extra, function(value, key) {\n      extraArgs.push('\\n');\n      extraArgs.push({[key]: value});\n    });\n\n    // eslint-disable-next-line no-console\n    console[consoleFun](\n      `${prefixFormat}${srcFormat}:${msgFormat}${extraFormat}`,\n      ...prefixArgs,\n      ...srcArgs,\n      ...msgArgs,\n      ...extraArgs\n    );\n  };\n};\n\nexport default logToConsole;\n"]}