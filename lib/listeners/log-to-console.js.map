{"version":3,"sources":["../../src/listeners/log-to-console.ts"],"names":[],"mappings":"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","file":"log-to-console.js","sourcesContent":["import TypescriptMinLog from '../minlog';\nimport _ from 'lodash-firecloud';\nimport fastSafeStringify from 'fast-safe-stringify';\n\nimport {\n  MinLogEntry,\n  MinLogLevel,\n  MinLogLevelNameToCode,\n  MinLogListener,\n  MinLogRawEntry,\n  MinLogSerializedTime\n} from '../types';\n\ntype FormatPair = string | [string, any];\n\nlet _isBrowser = typeof window !== 'undefined';\nlet _isNode = typeof process !== 'undefined' && _.isDefined(_.get(process, 'versions.node'));\n\nlet _levelToConsoleFun = function({level, levels}: {\n  level: MinLogLevel,\n  levels: MinLogLevelNameToCode\n}): string {\n  if (_.isString(level)) {\n    // eslint-disable-next-line prefer-destructuring\n    level = levels[level];\n  }\n\n  if (_.inRange(level, 0, levels.warn)) {\n    return 'error';\n  } else if (_.inRange(level, levels.warn, levels.info)) {\n    return 'warn';\n  } else if (_.inRange(level, levels.info, levels.debug)) {\n    return 'info';\n  } else if (_.inRange(level, levels.debug, levels.trace)) {\n    // return 'debug';\n    // console.debug doesn't seem to print anything,\n    // but console.debug is an alias to console.log anyway\n    return 'log';\n  } else if (level === levels.trace) {\n    return 'trace';\n  }\n\n  return 'log';\n};\n\n/*\ncfg has 2 properties\n- contextId (optional, default to 'top' in browser and undefined elsewhere)\n  An identifier for the current \"context\".\n- level (optional, defaults to trace)\n  Any log entry less important that cfg.level is ignored.\n*/\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport let serialize = function({entry, logger, rawEntry: _rawEntry, cfg}: {\n  entry: MinLogEntry & {\n    _time: MinLogSerializedTime\n  },\n  logger: TypescriptMinLog,\n  rawEntry: MinLogRawEntry,\n  cfg?: {\n    contextId?: string,\n    level?: MinLogLevel,\n    localTime?: boolean,\n    localStamp?: number,\n    stamp?: number\n  }\n}) {\n  let contextId;\n  let hasCssSupport = false;\n\n  if (_isBrowser) {\n    contextId = window.parent === window ? 'top' : 'iframe';\n    hasCssSupport = true;\n  }\n\n  cfg = _.defaults({}, cfg, {\n    contextId,\n    level: 'trace',\n    localTime: false\n  });\n\n  let now = cfg.localTime ?\n    entry._time.localStamp :\n    entry._time.stamp;\n  let levelName = logger.levelToLevelName(entry._level);\n  let formattedLevelName = _.padStart(_.toUpper(levelName), 5);\n  let consoleFun = _levelToConsoleFun({\n    level: entry._level,\n    levels: logger.levels\n  });\n\n  let color = '';\n  switch (consoleFun) {\n  case 'log':\n  case 'info':\n  case 'trace':\n    color = 'color: dodgerblue';\n    break;\n  default:\n  }\n\n  let src = _.merge({}, entry._src, entry._babelSrc);\n  let srcStr: string;\n\n  if (_.isEmpty(src)) {\n    srcStr = '';\n  } else {\n    _.defaults(src, {\n      // column may only be available in _babelSrc\n      // prefer a default, over not printing `:?` for structured parsing, with no optional groups\n      column: '?'\n    });\n    let inSrcFunction = _.isDefined(src.function) ? ` in ${src.function}()` : '';\n    srcStr = `${src.file}:${src.file}:${src.column}${inSrcFunction}`;\n  }\n\n  let msg = _.defaultTo(entry.msg, '');\n  if (!_.isEmpty(msg)) {\n    let {\n      _duration: duration\n    } = entry;\n\n    if (_.isDefined(duration)) {\n      msg = `${msg} - took ${duration.ms} ms`;\n      if (duration.ms > 1000) {\n        msg = `${msg} (${duration.human})`;\n      }\n    }\n  }\n\n  let extra = _.omit(entry, [\n    '_args',\n    '_babelSrc',\n    '_duration',\n    '_level',\n    '_src',\n    '_time',\n    '_timeEnd',\n    '_timeStart',\n    'msg'\n  ]);\n\n  if (_isBrowser) {\n    let ctx = {\n      window,\n      documentElement: window.document.documentElement\n    };\n    _.merge(extra, {\n      ctx\n    });\n  }\n\n  // devTools console sorts keys when object is expanded\n  let extraPairs = _.toPairs(extra);\n  // eslint-disable-next-line lodash/prop-shorthand\n  extraPairs = _.sortBy(extraPairs, 0);\n  extra = _.fromPairs(extraPairs);\n\n  return {\n    cfg,\n    hasCssSupport,\n\n    now,\n    levelName,\n    formattedLevelName,\n    consoleFun,\n    color,\n    src: srcStr,\n    msg,\n\n    extra\n  };\n};\n\nexport let toFormatArgs = function(...formatPairs: FormatPair[]): any[] {\n  let {\n    format,\n    formatArgs\n  } = _.reduce(formatPairs, function(result, formatPair) {\n    let {\n      format,\n      formatArgs\n    } = result;\n\n    if (_.isString(formatPair)) {\n      format.push(formatPair);\n      return {\n        format,\n        formatArgs\n      };\n    }\n\n    format.push(formatPair[0]);\n    formatArgs.push(formatPair[1]);\n\n    return {\n      format,\n      formatArgs\n    };\n  }, {\n    format: [],\n    formatArgs: []\n  });\n\n  let formatStr = _.join(format, '');\n  formatArgs.unshift(formatStr);\n  return formatArgs;\n};\n\nexport let logToConsole = function(cfg: {\n  level?: MinLogLevel,\n  contextId?: string\n} = {}): MinLogListener {\n  // eslint-disable-next-line complexity\n  return async function({entry, logger, rawEntry}) {\n    // eslint-disable-next-line require-atomic-updates\n    cfg = _.isFunction(cfg) ? await cfg() : await cfg;\n\n    if (_.isDefined(rawEntry) &&\n        _.filter(rawEntry._args).length === 1 &&\n        _.isDefined(rawEntry._args[0]._babelSrc)) {\n      return;\n    }\n\n    if (_.isDefined(cfg.level) && logger.levelIsBeyondGroup(entry._level, cfg.level)) {\n      return;\n    }\n\n    let {\n      cfg: cfg2,\n      hasCssSupport,\n      now,\n      formattedLevelName,\n      consoleFun,\n      color,\n      src,\n      msg,\n      extra\n    // @ts-ignore\n    } = serialize({entry, logger, rawEntry, cfg});\n    // eslint-disable-next-line require-atomic-updates\n    cfg = cfg2;\n\n    let extraArgs = [];\n    // devTools collapses objects with 'too many' keys,\n    // so we output objects with only one key\n    _.forEach(extra, function(value, key) {\n      if (_.isUndefined(value)) {\n        return;\n      }\n\n      let valueObj = {\n        [key]: value\n      };\n\n      if (_isBrowser) {\n        extraArgs.push('\\n');\n        extraArgs.push(valueObj);\n      } else if (_isNode) {\n        // prefer JSON output over util.inspect output\n        let valueStr = fastSafeStringify(valueObj, undefined, 2);\n        valueStr = `\\n${valueStr}`;\n        extraArgs.push(valueStr);\n      }\n    });\n\n    let formatArgs = [];\n\n    // color\n    if (hasCssSupport) {\n      formatArgs.push([\n        '%c',\n        color\n      ]);\n    }\n\n    // timestamp\n    formatArgs.push([\n      '%s',\n      now\n    ]);\n\n    // context\n    if (_.isDefined(cfg.contextId)) {\n      formatArgs.push([\n        ' %s',\n        cfg.contextId\n      ]);\n    }\n\n    // level name\n    if (hasCssSupport) {\n      formatArgs.push([\n        '%c',\n        'font-weight: bold'\n      ]);\n    }\n    formatArgs.push([\n      ' %s',\n      formattedLevelName\n    ]);\n\n    // color\n    if (hasCssSupport) {\n      formatArgs.push([\n        '%c',\n        color\n      ]);\n    }\n\n    // src\n    if (_.isDefined(src)) {\n      formatArgs.push([\n        ' %s',\n        src\n      ]);\n    }\n\n    // msg\n    formatArgs.push([\n      '\\n%s',\n      msg\n    ]);\n\n    formatArgs = toFormatArgs(...formatArgs);\n    formatArgs = _.concat(formatArgs, extraArgs);\n\n    // eslint-disable-next-line no-console\n    console[consoleFun](...formatArgs);\n  };\n};\n\nexport default logToConsole;\n"]}