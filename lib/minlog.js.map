{"version":3,"sources":["../src/minlog.ts"],"names":[],"mappings":"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","file":"minlog.js","sourcesContent":["import _ from 'lodash-firecloud';\nimport defaultLevels from './default-levels';\n\nimport {\n  MinLogEntry,\n  MinLogLevel,\n  MinLogLevelCode,\n  MinLogLevelName,\n  MinLogLevelNameToCode,\n  MinLogListener,\n  MinLogOptions,\n  MinLogSerializer\n} from './types';\n\ntype MinLogDefaultLevelLogFns = {\n  [TKey in keyof (typeof defaultLevels)]: (...args) => Promise<void>;\n};\n\nexport class MinLog {\n  serializers: MinLogSerializer[] = [];\n\n  listeners: MinLogListener[] = [];\n\n  levels: MinLogLevelNameToCode = defaultLevels;\n\n  requireRawEntry: boolean = false;\n\n  requireSrc: boolean = false;\n\n  time: (...args) => Promise<void>;\n\n  constructor(options: MinLogOptions = {}) {\n    _.mergeConcatArrays(this, options);\n\n    _.forEach(this.levels, (levelCode, levelName) => {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      this[levelName] = _.bind(this.log, this, levelCode);\n    });\n  }\n\n  child(childOptions: MinLogOptions = {}): MinLog {\n    let serializers = _.concat([], this.serializers, childOptions.serializers);\n    let listeners = _.concat([], this.listeners, childOptions.listeners);\n\n    let childLogger = new (this.constructor as typeof MinLog)(_.assign({}, childOptions, {\n      serializers,\n      listeners\n    }));\n\n    return childLogger;\n  }\n\n  levelIsBeyondGroup(\n    levelCodeOrName: MinLogLevel,\n    groupCodeOrName: MinLogLevel\n  ): boolean {\n    let levelCode = this.levelToLevelCode(levelCodeOrName);\n    let maxLevelCode = this.maxLevelCodeInGroup(groupCodeOrName);\n    return levelCode > maxLevelCode;\n  }\n\n  levelToLevelCode(levelCodeOrName: MinLogLevel): MinLogLevelCode {\n    if (_.isNumber(levelCodeOrName)) {\n      let levelCode = levelCodeOrName;\n      return levelCode;\n    }\n\n    let levelName = _.toLower(levelCodeOrName);\n    if (/^lvl[0-9]+$/.test(levelName)) {\n      let levelCodeStr = _.replace(levelName, /^lvl/, '');\n      let levelCode = _.toInteger(levelCodeStr);\n      return levelCode;\n    }\n\n    if (_.isUndefined(this.levels[levelName])) {\n      throw new Error(`Unknown level name ${levelName}. Known: ${_.keys(this.levels)}.`);\n    }\n\n    return this.levels[levelName];\n  }\n\n  levelToLevelName(levelCodeOrName: MinLogLevel): MinLogLevelName {\n    if (_.isString(levelCodeOrName)) {\n      let levelName = _.toLower(levelCodeOrName);\n\n      if (_.isUndefined(this.levels[levelName])) {\n        throw new Error(`Unknown level name ${levelName}. Known: ${_.keys(this.levels)}.`);\n      }\n\n      return levelName;\n    }\n\n    let levelCode = levelCodeOrName;\n    let levelName = _.defaultTo(_.invert(this.levels)[levelCode], `lvl${levelCode}`);\n    return levelName;\n  }\n\n  maxLevelCodeInGroup(levelCodeOrName: MinLogLevel): MinLogLevelCode {\n    let levelCode = this.levelToLevelCode(levelCodeOrName);\n\n    // round up levelCode to next level group, not inclusive\n    let maxLevelCodeGroup = _.floor(levelCode / 10) + 1;\n    let maxLevelCode = maxLevelCodeGroup * 10 - 1;\n    return maxLevelCode;\n  }\n\n  async log(levelCodeOrName: MinLogLevel, ...args): Promise<void> {\n    let levelCode: MinLogLevelCode;\n    if (_.isString(levelCodeOrName)) {\n      levelCode = this.levels[_.toLower(levelCodeOrName)];\n    } else {\n      levelCode = levelCodeOrName;\n    }\n\n    let src;\n    if (this.requireSrc) {\n      let callSites = _.getStackTrace(5);\n      let externalCallSite = _.find(callSites, function(callSite) {\n        return callSite.getFileName() !== __filename;\n      });\n      if (_.isDefined(externalCallSite)) {\n        src = {\n          file: externalCallSite.getFileName(),\n          line: externalCallSite.getLineNumber(),\n          function: externalCallSite.getFunctionName()\n        };\n      }\n    }\n\n    let entry: MinLogEntry = {\n      _args: args,\n      _time: Date.now(),\n      _level: levelCode,\n      _src: src\n    };\n\n    _.forEach(args, function(arg, index) {\n      let amendEntry = {\n        [`_arg${index}`]: arg\n      };\n\n      if (_.isError(arg) && _.isUndefined(entry.err)) {\n        amendEntry = {\n          err: arg\n        };\n      } else if (_.isString(arg) && _.isUndefined(entry.msg)) {\n        amendEntry = {\n          msg: arg\n        };\n      } else if (_.isPlainObject(arg)) {\n        amendEntry = arg;\n      }\n\n      _.merge(entry, amendEntry);\n    });\n\n    let rawEntry;\n    if (this.requireRawEntry) {\n      rawEntry = _.cloneDeep(entry);\n    }\n\n    for (let serializer of this.serializers) {\n      // eslint-disable-next-line require-atomic-updates\n      entry = await serializer({entry, logger: this as unknown as TypescriptMinLog, rawEntry});\n      if (_.isUndefined(entry)) {\n        break;\n      }\n    }\n\n    if (_.isUndefined(entry)) {\n      return;\n    }\n\n    for (let listener of this.listeners) {\n      await listener({entry, logger: this as unknown as TypescriptMinLog, rawEntry});\n    }\n  }\n\n  // trackTime(...logArgs, fn)\n  async trackTime(...args): Promise<void> {\n    let fn = args.pop();\n    args.push({\n      _timeStart: Date.now()\n    });\n\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.time(...args);\n\n    let result = await fn();\n    args.push({\n      _timeEnd: Date.now()\n    });\n\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.time(...args);\n    return result;\n  }\n}\n\nexport type TypescriptMinLog = MinLog & {\n  new(options?: MinLogOptions): MinLog & MinLogDefaultLevelLogFns;\n}\n\nexport let TypescriptMinLog = MinLog as TypescriptMinLog;\n\nexport default TypescriptMinLog;\n"]}