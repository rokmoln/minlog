{"version":3,"sources":["../../src/serializers/time.js"],"names":[],"mappings":"4JAAA;AACA;AACA,yE;;AAEA,IAAI,qBAAqB,GAAG,UAAS,SAAT,EAAoB;AAC9C,MAAI,CAAC,yBAAE,SAAF,CAAY,SAAZ,CAAD,IAA2B,SAAS,IAAI,CAA5C,EAA+C;AAC7C;AACD;;AAED,MAAI,MAAM,GAAG,qBAAO,SAAP,CAAb;AACA,MAAI,CAAC,MAAM,CAAC,OAAP,EAAL,EAAuB;AACrB;AACD;;AAED,SAAO,MAAP;AACD,CAXD,C;;AAaO,IAAI,aAAa,GAAG,gBAAe,EAAC,KAAD,EAAf,EAAwB;AACjD,MAAI;AACF,IAAA,KADE;AAEF,IAAA,UAFE;AAGF,IAAA,QAHE;AAIA,EAAA,KAJJ;;AAMA,MAAI,UAAU,GAAG,8BAAsB,KAAtB,CAAjB;AACA,MAAI,CAAC,UAAL,EAAiB;AACf,WAAO,KAAP;AACD;;AAED,EAAA,KAAK,CAAC,KAAN,GAAc;AACZ,IAAA,KAAK,EAAE,UAAU,CAAC,WAAX,EADK;AAEZ,IAAA,UAAU,EAAE,UAAU,CAAC,WAAX,CAAuB,IAAvB,CAFA;AAGZ,IAAA,IAAI,EAAE,wBAAS,EAAT,CAAY,KAAZ,EAHM;AAIZ,IAAA,UAAU,EAAE,UAAU,CAAC,SAAX,EAJA,EAAd;;;AAOA,MAAI,eAAe,GAAG,8BAAsB,UAAtB,CAAtB;AACA,MAAI,CAAC,eAAL,EAAsB;AACpB,WAAO,KAAP;AACD;;AAED,EAAA,KAAK,CAAC,UAAN,GAAmB;AACjB,IAAA,KAAK,EAAE,eAAe,CAAC,WAAhB,EADU;AAEjB,IAAA,UAAU,EAAE,eAAe,CAAC,WAAhB,CAA4B,IAA5B,CAFK;AAGjB,IAAA,IAAI,EAAE,wBAAS,EAAT,CAAY,KAAZ,EAHW;AAIjB,IAAA,UAAU,EAAE,eAAe,CAAC,SAAhB,EAJK,EAAnB;;;AAOA,MAAI,aAAa,GAAG,8BAAsB,QAAtB,CAApB;AACA,MAAI,CAAC,aAAL,EAAoB;AAClB,WAAO,KAAP;AACD;;AAED,EAAA,KAAK,CAAC,QAAN,GAAiB;AACf,IAAA,KAAK,EAAE,aAAa,CAAC,WAAd,EADQ;AAEf,IAAA,UAAU,EAAE,aAAa,CAAC,WAAd,CAA0B,IAA1B,CAFG;AAGf,IAAA,IAAI,EAAE,wBAAS,EAAT,CAAY,KAAZ,EAHS;AAIf,IAAA,UAAU,EAAE,aAAa,CAAC,SAAd,EAJG,EAAjB;;;AAOA,MAAI,QAAQ,GAAG,gBAAO,QAAP,CAAgB,QAAQ,GAAG,UAA3B,CAAf;AACA,EAAA,KAAK,CAAC,SAAN,GAAkB;AAChB,IAAA,KAAK,EAAE,QAAQ,CAAC,WAAT,EADS;AAEhB,IAAA,KAAK,EAAE,QAAQ,CAAC,QAAT,EAFS;AAGhB,IAAA,EAAE,EAAE,QAAQ,CAAC,cAAT,EAHY,EAAlB;;;AAMA,SAAO,KAAP;AACD,CAnDM,C","file":"time.js","sourcesContent":["import _ from 'lodash-firecloud';\nimport moment from 'moment';\nimport momentTz from 'moment-timezone';\n\nlet _maybeToDefinedMoment = function(timestamp) {\n  if (!_.isInteger(timestamp) || timestamp <= 0) {\n    return;\n  }\n\n  let result = moment(timestamp);\n  if (!result.isValid()) {\n    return;\n  }\n\n  return result;\n};\n\nexport let serializeTime = async function({entry}) {\n  let {\n    _time,\n    _timeStart,\n    _timeEnd\n  } = entry;\n\n  let momentTime = _maybeToDefinedMoment(_time);\n  if (!momentTime) {\n    return entry;\n  }\n\n  entry._time = {\n    stamp: momentTime.toISOString(),\n    localStamp: momentTime.toISOString(true),\n    zone: momentTz.tz.guess(),\n    utc_offset: momentTime.utcOffset()\n  };\n\n  let momentTimeStart = _maybeToDefinedMoment(_timeStart);\n  if (!momentTimeStart) {\n    return entry;\n  }\n\n  entry._timeStart = {\n    stamp: momentTimeStart.toISOString(),\n    localStamp: momentTimeStart.toISOString(true),\n    zone: momentTz.tz.guess(),\n    utc_offset: momentTimeStart.utcOffset()\n  };\n\n  let momentTimeEnd = _maybeToDefinedMoment(_timeEnd);\n  if (!momentTimeEnd) {\n    return entry;\n  }\n\n  entry._timeEnd = {\n    stamp: momentTimeEnd.toISOString(),\n    localStamp: momentTimeEnd.toISOString(true),\n    zone: momentTz.tz.guess(),\n    utc_offset: momentTimeEnd.utcOffset()\n  };\n\n  let duration = moment.duration(_timeEnd - _timeStart);\n  entry._duration = {\n    stamp: duration.toISOString(),\n    human: duration.humanize(),\n    ms: duration.asMilliseconds()\n  };\n\n  return entry;\n};\n\nexport default serializeTime;\n"]}