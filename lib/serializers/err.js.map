{"version":3,"sources":["../../src/serializers/err.js"],"names":[],"mappings":";;;;;;;;;AAAA;;AACA;;;;AAEO,IAAI,YAAY;AAAA;AAAA;AAAA,sCAAG,WAAe;AAAC,IAAA;AAAD,GAAf,EAAwB;AAChD,QAAI;AAAC,MAAA;AAAD,QAAQ,KAAZ;;AAEA,QAAI,CAAC,yBAAE,OAAF,CAAU,GAAV,CAAL,EAAqB;AACnB,aAAO,KAAP;AACD;;AAED,QAAI,KAAJ;;AACA,QAAI;AACF,MAAA,KAAK,SAAS,sBAAW,SAAX,CAAqB,GAArB,CAAd;AACD,KAFD,CAEE,OAAO,eAAP,EAAwB;AACxB,UAAI;AACF,QAAA,KAAK,SAAS,sBAAW,SAAX,CAAqB,GAArB,EAA0B;AAAC,UAAA,OAAO,EAAE;AAAV,SAA1B,CAAd;AACD,OAFD,CAEE,OAAO,gBAAP,EAAyB;AACzB;AACA,QAAA,OAAO,CAAC,KAAR,CAAc,gBAAd;AACD,OANuB,CAOxB;;;AACA,MAAA,OAAO,CAAC,KAAR,CAAc,eAAd;AACD;;AAED,IAAA,KAAK,CAAC,GAAN,GAAY;AACV,MAAA,IAAI,EAAE,GAAG,CAAC,IADA;AAEV,MAAA,OAAO,EAAE,GAAG,CAAC,OAFH;AAGV,MAAA,KAHU;AAKV;AACA,MAAA,QAAQ,EAAE,GAAG,CAAC;AANJ,KAAZ;AASA,QAAI,QAAQ,GAAG,GAAG,CAAC,QAAJ,GAAe,WAAf,GAA6B,EAA5C;AACA,QAAI,SAAS,GAAG,GAAG,CAAC,SAAJ,GAAgB,eAAhB,GAAkC,EAAlD;AACA,IAAA,KAAK,CAAC,GAAN,GAAY,KAAK,CAAC,GAAN,IACT,GAAE,QAAS,GAAE,SAAU,GAAE,GAAG,CAAC,IAAK,KAAI,GAAG,CAAC,OAAQ,EADrD;AAGA,WAAO,KAAP;AACD,GApCsB;;AAAA,kBAAZ,YAAY;AAAA;AAAA;AAAA,GAAhB","file":"err.js","sourcesContent":["import _ from 'lodash-firecloud';\nimport stacktrace from 'stacktrace-js';\n\nexport let serializeErr = async function({entry}) {\n  let {err} = entry;\n\n  if (!_.isError(err)) {\n    return entry;\n  }\n\n  let stack;\n  try {\n    stack = await stacktrace.fromError(err);\n  } catch (stacktraceError) {\n    try {\n      stack = await stacktrace.fromError(err, {offline: true});\n    } catch (stacktraceError2) {\n      // eslint-disable-next-line no-console\n      console.error(stacktraceError2);\n    }\n    // eslint-disable-next-line no-console\n    console.error(stacktraceError);\n  }\n\n  entry.err = {\n    name: err.name,\n    message: err.message,\n    stack,\n\n    // custom\n    uncaught: err.uncaught\n  };\n\n  let uncaught = err.uncaught ? 'Uncaught ' : '';\n  let inPromise = err.inPromise ? '(in promise) ' : '';\n  entry.msg = entry.msg ||\n    `${uncaught}${inPromise}${err.name}: ${err.message}`;\n\n  return entry;\n};\n\nexport default serializeErr;\n"]}